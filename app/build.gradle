plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services' // 구글 서비스 추가
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.nakyung.meongnyang"
        minSdk 27
        targetSdk 32
        versionCode 8
        versionName "1.0.7"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    splits {
        abi {
            enable true
            reset()
            include('x86', 'x86_64', 'armeabi-v7a')
            universalApk true
        }
    }

    viewBinding {
        enabled true
    }

    dataBinding {
        enabled true
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // kakao login
    implementation group: 'com.kakao.sdk', name: 'usermgmt', version: '1.30.0'
    implementation 'com.kakao.sdk:v2-user:2.11.0'
    // Google Play 서비스 선언
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Converter (Json 타입 결과를 객체로 매핑)
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // okhttp3
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.4.2'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth:20.2.0'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.4'

    // permission
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // map
    implementation files('libs/libDaumMapAndroid.jar')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // ViewModel
    def archLifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    def activity_version="1.1.0"
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation 'androidx.activity:activity-ktx:1.1.0'

    // Model
    implementation 'org.pytorch:pytorch_android_lite:1.12.2'
    implementation 'org.pytorch:pytorch_android_torchvision_lite:1.12.2'
    implementation 'org.tensorflow:tensorflow-lite:+'
    implementation 'org.tensorflow:tensorflow-lite-support:+'

    // retrofit2
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'

    // AWS S3
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.13.5'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.13.5'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.13.5'

    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
}

def publishedArtifactsVersion = System.getenv("KOTLIN_DL_RELEASE_VERSION")
if (publishedArtifactsVersion != null && !publishedArtifactsVersion.isBlank()) {
    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute project(":api") using module("org.jetbrains.kotlinx:kotlin-deeplearning-api:$publishedArtifactsVersion") because "testing published artifacts"
            substitute project(":impl") using module("org.jetbrains.kotlinx:kotlin-deeplearning-impl:$publishedArtifactsVersion") because "testing published artifacts"
            substitute project(":tensorflow") using module("org.jetbrains.kotlinx:kotlin-deeplearning-tensorflow:$publishedArtifactsVersion") because "testing published artifacts"
            substitute project(":dataset") using module("org.jetbrains.kotlinx:kotlin-deeplearning-dataset:$publishedArtifactsVersion") because "testing published artifacts"
            substitute project(":visualization") using module("org.jetbrains.kotlinx:kotlin-deeplearning-visualization:$publishedArtifactsVersion") because "testing published artifacts"
            substitute project(":onnx") using module("org.jetbrains.kotlinx:kotlin-deeplearning-onnx:$publishedArtifactsVersion") because "testing published artifacts"
        }
    }
}